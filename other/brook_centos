#!/bin/bash
# chkconfig: 2345 90 10
# description: Brook

### BEGIN INIT INFO
# Provides:          Brook
# Required-Start:    $network $syslog
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Lightweight SOCKS5 proxy tool
# Description:       Start or stop the Brook
### END INIT INFO

NAME="Brook"
NAME_BIN="brook"
FILE="/usr/local/brook"
CONF="${FILE}/brook.conf"

Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[信息]${Font_color_suffix}"
Error="${Red_font_prefix}[错误]${Font_color_suffix}"
RETVAL=0

check_running(){
	PID=`ps -ef |grep "${NAME_BIN}" |grep -v "grep" | grep -v ".sh"| grep -v "init.d" |grep -v "service" |awk '{print $2}'`
	if [[ ! -z ${PID} ]]; then
		return 0
	else
		return 1
	fi
}
read_config(){
	[[ ! -e ${CONF} ]] && echo -e "${Error} Brook 配置文件不存在 !" && exit 1
	port=`cat ${CONF}|grep "port"|awk -F "=" '{print $NF}'`
	passwd=`cat ${CONF}|grep "passwd"|awk -F "=" '{print $NF}'`
	timeout=`cat ${CONF}|grep "timeout"|awk -F "=" '{print $NF}'`
	deadline=`cat ${CONF}|grep "deadline"|awk -F "=" '{print $NF}'`
	music=`cat ${CONF}|grep "music"|awk -F "=" '{print $NF}'`
}
View_User(){
	ip=`wget -qO- -t1 -T2 ipinfo.io/ip`
	[[ -z ${ip} ]] && ip="VPS_IP"
	[[ -z ${music} ]] && music="无 (客户端留空)"
	clear && echo "————————————————" && echo
	echo -e " Brook 信息 :" && echo
	echo -e " 地址\t: ${Green_font_prefix}${ip}${Font_color_suffix}"
	echo -e " 端口\t: ${Green_font_prefix}${port}${Font_color_suffix}"
	echo -e " 密码\t: ${Green_font_prefix}${passwd}${Font_color_suffix}"
	echo -e " 音乐\t: ${Green_font_prefix}${music}${Font_color_suffix}"
	echo && echo "————————————————"
}
do_start(){
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "${Info} $NAME (PID ${PID}) 正在运行..." && exit 0
	else
		read_config
		cd ${FILE}
		echo -e "${Info} $NAME 启动中..."
		if [[ -z ${music} ]]; then
			nohup ./brook bkserver -l :${port} -p ${passwd} -t ${timeout} -d ${deadline} > /dev/null 2>&1 &
		else
			nohup ./brook bkserver -l :${port} -p ${passwd} -t ${timeout} -d ${deadline} -m ${music} > /dev/null 2>&1 &
		fi
		sleep 2s
		check_running
		if [[ $? -eq 0 ]]; then
			echo -e "${Info} $NAME 启动成功 !"
			View_User
		else
			echo -e "${Error} $NAME 启动失败 !"
		fi
	fi
}
do_stop(){
	check_running
	if [[ $? -eq 0 ]]; then
		kill -9 ${PID}
		RETVAL=$?
		if [[ $RETVAL -eq 0 ]]; then
			echo -e "${Info} $NAME 停止成功 !"
		else
			echo -e "${Error} $NAME 停止失败 !"
		fi
	else
		echo -e "${Info} $NAME 未运行"
		RETVAL=1
	fi
}
do_status(){
	check_running
	if [[ $? -eq 0 ]]; then
		read_config
		View_User
		echo -e "${Info} $NAME (PID ${PID}) 正在运行..."
	else
		echo -e "${Info} $NAME 未运行 !"
		RETVAL=1
	fi
}
do_restart(){
	do_stop
	do_start
}
case "$1" in
	start|stop|restart|status)
	do_$1
	;;
	*)
	echo -e "使用方法: $0 { start | stop | restart | status }"
	RETVAL=1
	;;
esac
exit $RETVAL